# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{dm-validations}
  s.version = "1.2.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = [%q{Guy van den Berg}, %q{Emmanuel Gomez}]
  s.date = %q{2011-09-09}
  s.description = %q{Library for performing validations on DataMapper resources and plain Ruby objects}
  s.email = %q{emmanuel.gomez@gmail.com}
  s.extra_rdoc_files = [
    "LICENSE",
    "README.rdoc"
  ]
  s.files = [
    "Gemfile",
    "LICENSE",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "dm-validations.gemspec",
    "lib/data_mapper/core.rb",
    "lib/data_mapper/support/assertions.rb",
    "lib/data_mapper/support/equalizer.rb",
    "lib/data_mapper/support/ordered_set.rb",
    "lib/data_mapper/validation.rb",
    "lib/data_mapper/validation/backward.rb",
    "lib/data_mapper/validation/context.rb",
    "lib/data_mapper/validation/contextual_rule_set.rb",
    "lib/data_mapper/validation/error_set.rb",
    "lib/data_mapper/validation/exceptions.rb",
    "lib/data_mapper/validation/inferred.rb",
    "lib/data_mapper/validation/macros.rb",
    "lib/data_mapper/validation/message_transformer.rb",
    "lib/data_mapper/validation/model_extensions.rb",
    "lib/data_mapper/validation/resource_extensions.rb",
    "lib/data_mapper/validation/rule.rb",
    "lib/data_mapper/validation/rule/absence.rb",
    "lib/data_mapper/validation/rule/acceptance.rb",
    "lib/data_mapper/validation/rule/block.rb",
    "lib/data_mapper/validation/rule/confirmation.rb",
    "lib/data_mapper/validation/rule/format.rb",
    "lib/data_mapper/validation/rule/format/proc.rb",
    "lib/data_mapper/validation/rule/format/regexp.rb",
    "lib/data_mapper/validation/rule/formats/email.rb",
    "lib/data_mapper/validation/rule/formats/url.rb",
    "lib/data_mapper/validation/rule/length.rb",
    "lib/data_mapper/validation/rule/length/equal.rb",
    "lib/data_mapper/validation/rule/length/maximum.rb",
    "lib/data_mapper/validation/rule/length/minimum.rb",
    "lib/data_mapper/validation/rule/length/range.rb",
    "lib/data_mapper/validation/rule/method.rb",
    "lib/data_mapper/validation/rule/numericalness.rb",
    "lib/data_mapper/validation/rule/numericalness/equal.rb",
    "lib/data_mapper/validation/rule/numericalness/greater_than.rb",
    "lib/data_mapper/validation/rule/numericalness/greater_than_or_equal.rb",
    "lib/data_mapper/validation/rule/numericalness/integer.rb",
    "lib/data_mapper/validation/rule/numericalness/less_than.rb",
    "lib/data_mapper/validation/rule/numericalness/less_than_or_equal.rb",
    "lib/data_mapper/validation/rule/numericalness/not_equal.rb",
    "lib/data_mapper/validation/rule/numericalness/numeric.rb",
    "lib/data_mapper/validation/rule/presence.rb",
    "lib/data_mapper/validation/rule/primitive_type.rb",
    "lib/data_mapper/validation/rule/uniqueness.rb",
    "lib/data_mapper/validation/rule/within.rb",
    "lib/data_mapper/validation/rule/within/range.rb",
    "lib/data_mapper/validation/rule/within/range/bounded.rb",
    "lib/data_mapper/validation/rule/within/range/unbounded_begin.rb",
    "lib/data_mapper/validation/rule/within/range/unbounded_end.rb",
    "lib/data_mapper/validation/rule/within/set.rb",
    "lib/data_mapper/validation/rule_set.rb",
    "lib/data_mapper/validation/support/object.rb",
    "lib/data_mapper/validation/support/ordered_hash.rb",
    "lib/data_mapper/validation/violation.rb",
    "lib/dm-validations.rb",
    "spec/data_mapper/validation/resource_extensions/save_spec.rb",
    "spec/data_mapper/validation/resource_extensions/validate_spec.rb",
    "spec/fixtures/barcode.rb",
    "spec/fixtures/basketball_court.rb",
    "spec/fixtures/basketball_player.rb",
    "spec/fixtures/beta_tester_account.rb",
    "spec/fixtures/bill_of_landing.rb",
    "spec/fixtures/boat_dock.rb",
    "spec/fixtures/city.rb",
    "spec/fixtures/company.rb",
    "spec/fixtures/corporate_world.rb",
    "spec/fixtures/country.rb",
    "spec/fixtures/ethernet_frame.rb",
    "spec/fixtures/event.rb",
    "spec/fixtures/g3_concert.rb",
    "spec/fixtures/jabberwock.rb",
    "spec/fixtures/kayak.rb",
    "spec/fixtures/lernean_hydra.rb",
    "spec/fixtures/mathematical_function.rb",
    "spec/fixtures/memory_object.rb",
    "spec/fixtures/mittelschnauzer.rb",
    "spec/fixtures/motor_launch.rb",
    "spec/fixtures/multibyte.rb",
    "spec/fixtures/page.rb",
    "spec/fixtures/phone_number.rb",
    "spec/fixtures/pirogue.rb",
    "spec/fixtures/programming_language.rb",
    "spec/fixtures/reservation.rb",
    "spec/fixtures/scm_operation.rb",
    "spec/fixtures/sms_message.rb",
    "spec/fixtures/udp_packet.rb",
    "spec/integration/absent_field_validator/absent_field_validator_spec.rb",
    "spec/integration/absent_field_validator/spec_helper.rb",
    "spec/integration/acceptance_validator/acceptance_validator_spec.rb",
    "spec/integration/acceptance_validator/spec_helper.rb",
    "spec/integration/automatic_validation/custom_messages_for_inferred_validation_spec.rb",
    "spec/integration/automatic_validation/disabling_inferred_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_boolean_properties_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_float_property_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_format_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_integer_properties_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_length_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_presence_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_primitive_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_uniqueness_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_within_validation_spec.rb",
    "spec/integration/automatic_validation/spec_helper.rb",
    "spec/integration/block_validator/block_validator_spec.rb",
    "spec/integration/block_validator/spec_helper.rb",
    "spec/integration/conditional_validation/if_condition_spec.rb",
    "spec/integration/conditional_validation/spec_helper.rb",
    "spec/integration/confirmation_validator/confirmation_validator_spec.rb",
    "spec/integration/confirmation_validator/spec_helper.rb",
    "spec/integration/datamapper_models/association_validation_spec.rb",
    "spec/integration/datamapper_models/inheritance_spec.rb",
    "spec/integration/duplicated_validations/duplicated_validations_spec.rb",
    "spec/integration/duplicated_validations/spec_helper.rb",
    "spec/integration/format_validator/email_format_validator_spec.rb",
    "spec/integration/format_validator/format_validator_spec.rb",
    "spec/integration/format_validator/regexp_validator_spec.rb",
    "spec/integration/format_validator/spec_helper.rb",
    "spec/integration/format_validator/url_format_validator_spec.rb",
    "spec/integration/length_validator/default_value_spec.rb",
    "spec/integration/length_validator/equality_spec.rb",
    "spec/integration/length_validator/error_message_spec.rb",
    "spec/integration/length_validator/maximum_spec.rb",
    "spec/integration/length_validator/minimum_spec.rb",
    "spec/integration/length_validator/range_spec.rb",
    "spec/integration/length_validator/spec_helper.rb",
    "spec/integration/method_validator/method_validator_spec.rb",
    "spec/integration/method_validator/spec_helper.rb",
    "spec/integration/numeric_validator/equality_with_float_type_spec.rb",
    "spec/integration/numeric_validator/equality_with_integer_type_spec.rb",
    "spec/integration/numeric_validator/float_type_spec.rb",
    "spec/integration/numeric_validator/gt_with_float_type_spec.rb",
    "spec/integration/numeric_validator/gte_with_float_type_spec.rb",
    "spec/integration/numeric_validator/integer_only_true_spec.rb",
    "spec/integration/numeric_validator/integer_type_spec.rb",
    "spec/integration/numeric_validator/lt_with_float_type_spec.rb",
    "spec/integration/numeric_validator/lte_with_float_type_spec.rb",
    "spec/integration/numeric_validator/spec_helper.rb",
    "spec/integration/primitive_validator/primitive_validator_spec.rb",
    "spec/integration/primitive_validator/spec_helper.rb",
    "spec/integration/pure_ruby_objects/plain_old_ruby_object_validation_spec.rb",
    "spec/integration/required_field_validator/association_spec.rb",
    "spec/integration/required_field_validator/boolean_type_value_spec.rb",
    "spec/integration/required_field_validator/date_type_value_spec.rb",
    "spec/integration/required_field_validator/datetime_type_value_spec.rb",
    "spec/integration/required_field_validator/float_type_value_spec.rb",
    "spec/integration/required_field_validator/integer_type_value_spec.rb",
    "spec/integration/required_field_validator/plain_old_ruby_object_spec.rb",
    "spec/integration/required_field_validator/shared_examples.rb",
    "spec/integration/required_field_validator/spec_helper.rb",
    "spec/integration/required_field_validator/string_type_value_spec.rb",
    "spec/integration/required_field_validator/text_type_value_spec.rb",
    "spec/integration/shared/default_validation_context.rb",
    "spec/integration/shared/valid_and_invalid_model.rb",
    "spec/integration/uniqueness_validator/spec_helper.rb",
    "spec/integration/uniqueness_validator/uniqueness_validator_spec.rb",
    "spec/integration/within_validator/spec_helper.rb",
    "spec/integration/within_validator/within_validator_spec.rb",
    "spec/public/resource_spec.rb",
    "spec/rcov.opts",
    "spec/spec.opts",
    "spec/spec_helper.rb",
    "spec/unit/contextual_validators/emptiness_spec.rb",
    "spec/unit/contextual_validators/execution_spec.rb",
    "spec/unit/contextual_validators/spec_helper.rb",
    "spec/unit/generic_validator/equality_operator_spec.rb",
    "spec/unit/generic_validator/optional_spec.rb",
    "spec/unit/validation_errors/adding_spec.rb",
    "spec/unit/validation_errors/emptiness_spec.rb",
    "spec/unit/validation_errors/enumerable_spec.rb",
    "spec/unit/validation_errors/reading_spec.rb",
    "spec/unit/validation_errors/respond_to_spec.rb",
    "spec/unit/validators/within_validator_spec.rb",
    "tasks/spec.rake",
    "tasks/yard.rake",
    "tasks/yardstick.rake"
  ]
  s.homepage = %q{http://github.com/datamapper/dm-validations}
  s.require_paths = [%q{lib}]
  s.rubyforge_project = %q{datamapper}
  s.rubygems_version = %q{1.8.6}
  s.summary = %q{Library for performing validations on DataMapper resources and plain Ruby objects}
  s.test_files = [
    "spec/data_mapper/validation/resource_extensions/save_spec.rb",
    "spec/data_mapper/validation/resource_extensions/validate_spec.rb",
    "spec/fixtures/barcode.rb",
    "spec/fixtures/basketball_court.rb",
    "spec/fixtures/basketball_player.rb",
    "spec/fixtures/beta_tester_account.rb",
    "spec/fixtures/bill_of_landing.rb",
    "spec/fixtures/boat_dock.rb",
    "spec/fixtures/city.rb",
    "spec/fixtures/company.rb",
    "spec/fixtures/corporate_world.rb",
    "spec/fixtures/country.rb",
    "spec/fixtures/ethernet_frame.rb",
    "spec/fixtures/event.rb",
    "spec/fixtures/g3_concert.rb",
    "spec/fixtures/jabberwock.rb",
    "spec/fixtures/kayak.rb",
    "spec/fixtures/lernean_hydra.rb",
    "spec/fixtures/mathematical_function.rb",
    "spec/fixtures/memory_object.rb",
    "spec/fixtures/mittelschnauzer.rb",
    "spec/fixtures/motor_launch.rb",
    "spec/fixtures/multibyte.rb",
    "spec/fixtures/page.rb",
    "spec/fixtures/phone_number.rb",
    "spec/fixtures/pirogue.rb",
    "spec/fixtures/programming_language.rb",
    "spec/fixtures/reservation.rb",
    "spec/fixtures/scm_operation.rb",
    "spec/fixtures/sms_message.rb",
    "spec/fixtures/udp_packet.rb",
    "spec/integration/absent_field_validator/absent_field_validator_spec.rb",
    "spec/integration/absent_field_validator/spec_helper.rb",
    "spec/integration/acceptance_validator/acceptance_validator_spec.rb",
    "spec/integration/acceptance_validator/spec_helper.rb",
    "spec/integration/automatic_validation/custom_messages_for_inferred_validation_spec.rb",
    "spec/integration/automatic_validation/disabling_inferred_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_boolean_properties_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_float_property_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_format_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_integer_properties_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_length_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_presence_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_primitive_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_uniqueness_validation_spec.rb",
    "spec/integration/automatic_validation/inferred_within_validation_spec.rb",
    "spec/integration/automatic_validation/spec_helper.rb",
    "spec/integration/block_validator/block_validator_spec.rb",
    "spec/integration/block_validator/spec_helper.rb",
    "spec/integration/conditional_validation/if_condition_spec.rb",
    "spec/integration/conditional_validation/spec_helper.rb",
    "spec/integration/confirmation_validator/confirmation_validator_spec.rb",
    "spec/integration/confirmation_validator/spec_helper.rb",
    "spec/integration/datamapper_models/association_validation_spec.rb",
    "spec/integration/datamapper_models/inheritance_spec.rb",
    "spec/integration/duplicated_validations/duplicated_validations_spec.rb",
    "spec/integration/duplicated_validations/spec_helper.rb",
    "spec/integration/format_validator/email_format_validator_spec.rb",
    "spec/integration/format_validator/format_validator_spec.rb",
    "spec/integration/format_validator/regexp_validator_spec.rb",
    "spec/integration/format_validator/spec_helper.rb",
    "spec/integration/format_validator/url_format_validator_spec.rb",
    "spec/integration/length_validator/default_value_spec.rb",
    "spec/integration/length_validator/equality_spec.rb",
    "spec/integration/length_validator/error_message_spec.rb",
    "spec/integration/length_validator/maximum_spec.rb",
    "spec/integration/length_validator/minimum_spec.rb",
    "spec/integration/length_validator/range_spec.rb",
    "spec/integration/length_validator/spec_helper.rb",
    "spec/integration/method_validator/method_validator_spec.rb",
    "spec/integration/method_validator/spec_helper.rb",
    "spec/integration/numeric_validator/equality_with_float_type_spec.rb",
    "spec/integration/numeric_validator/equality_with_integer_type_spec.rb",
    "spec/integration/numeric_validator/float_type_spec.rb",
    "spec/integration/numeric_validator/gt_with_float_type_spec.rb",
    "spec/integration/numeric_validator/gte_with_float_type_spec.rb",
    "spec/integration/numeric_validator/integer_only_true_spec.rb",
    "spec/integration/numeric_validator/integer_type_spec.rb",
    "spec/integration/numeric_validator/lt_with_float_type_spec.rb",
    "spec/integration/numeric_validator/lte_with_float_type_spec.rb",
    "spec/integration/numeric_validator/spec_helper.rb",
    "spec/integration/primitive_validator/primitive_validator_spec.rb",
    "spec/integration/primitive_validator/spec_helper.rb",
    "spec/integration/pure_ruby_objects/plain_old_ruby_object_validation_spec.rb",
    "spec/integration/required_field_validator/association_spec.rb",
    "spec/integration/required_field_validator/boolean_type_value_spec.rb",
    "spec/integration/required_field_validator/date_type_value_spec.rb",
    "spec/integration/required_field_validator/datetime_type_value_spec.rb",
    "spec/integration/required_field_validator/float_type_value_spec.rb",
    "spec/integration/required_field_validator/integer_type_value_spec.rb",
    "spec/integration/required_field_validator/plain_old_ruby_object_spec.rb",
    "spec/integration/required_field_validator/shared_examples.rb",
    "spec/integration/required_field_validator/spec_helper.rb",
    "spec/integration/required_field_validator/string_type_value_spec.rb",
    "spec/integration/required_field_validator/text_type_value_spec.rb",
    "spec/integration/shared/default_validation_context.rb",
    "spec/integration/shared/valid_and_invalid_model.rb",
    "spec/integration/uniqueness_validator/spec_helper.rb",
    "spec/integration/uniqueness_validator/uniqueness_validator_spec.rb",
    "spec/integration/within_validator/spec_helper.rb",
    "spec/integration/within_validator/within_validator_spec.rb",
    "spec/public/resource_spec.rb",
    "spec/spec_helper.rb",
    "spec/unit/contextual_validators/emptiness_spec.rb",
    "spec/unit/contextual_validators/execution_spec.rb",
    "spec/unit/contextual_validators/spec_helper.rb",
    "spec/unit/generic_validator/equality_operator_spec.rb",
    "spec/unit/generic_validator/optional_spec.rb",
    "spec/unit/validation_errors/adding_spec.rb",
    "spec/unit/validation_errors/emptiness_spec.rb",
    "spec/unit/validation_errors/enumerable_spec.rb",
    "spec/unit/validation_errors/reading_spec.rb",
    "spec/unit/validation_errors/respond_to_spec.rb",
    "spec/unit/validators/within_validator_spec.rb"
  ]

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<dm-core>, ["~> 1.2.0"])
      s.add_development_dependency(%q<dm-types>, ["~> 1.2.0"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_development_dependency(%q<rake>, ["~> 0.8.7"])
      s.add_development_dependency(%q<rspec>, ["~> 1.3.1"])
    else
      s.add_dependency(%q<dm-core>, ["~> 1.2.0"])
      s.add_dependency(%q<dm-types>, ["~> 1.2.0"])
      s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_dependency(%q<rake>, ["~> 0.8.7"])
      s.add_dependency(%q<rspec>, ["~> 1.3.1"])
    end
  else
    s.add_dependency(%q<dm-core>, ["~> 1.2.0"])
    s.add_dependency(%q<dm-types>, ["~> 1.2.0"])
    s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
    s.add_dependency(%q<rake>, ["~> 0.8.7"])
    s.add_dependency(%q<rspec>, ["~> 1.3.1"])
  end
end

